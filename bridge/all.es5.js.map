{"version":3,"sources":["hand-explorer.js","ibb-to-pbn.js"],"names":[],"mappings":"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","file":"all.es5.js","sourcesContent":["// 'N:T843.K4.KT853.73 J97.J763.642.KJ5 Q52.Q982.QJ.9862 AK6.AT5.A97.AQT4'\n\n// to make the page load faster during development\ncalcDDTable.cache = {\"N:T843.K4.KT853.73 J97.J763.642.KJ5 Q52.Q982.QJ.9862 AK6.AT5.A97.AQT4\":{\"N\":{\"N\":3,\"S\":3,\"E\":9,\"W\":9},\"S\":{\"N\":5,\"S\":5,\"E\":8,\"W\":8},\"H\":{\"N\":3,\"S\":3,\"E\":9,\"W\":9},\"D\":{\"N\":6,\"S\":6,\"E\":7,\"W\":7},\"C\":{\"N\":3,\"S\":3,\"E\":9,\"W\":9}}};\n\ntype Play = {\n  suit: string;\n  rank: number;\n  player: string;\n};\n\ntype CompleteTrick = {\n  leader: string;\n  winner: ?string;\n  plays: Play[];\n};\n\nclass Board {\n  constructor(pbn: string, strain: string) {\n    this.cards = parsePBN(pbn);  // remaining cards in hands\n    this.lastTrickPBN = pbn;\n    this.firstPlayer = pbn[0];  // first to play comes directly from PBN.\n    this.strain = strain;  // e.g. spades or no trump ('H', 'S', 'N', ...)\n    this.player = this.firstPlayer;  // next to play\n    this.plays = [];  // plays in this trick\n    this.tricks = [];  // previous tricks. Array of CompleteTrick.\n    this.ew_tricks = 0;\n    this.ns_tricks = 0;\n  }\n\n  leader(): string {\n    return this.plays.length ? this.plays[0].player : this.player;\n  }\n\n  isCompleted(): boolean {\n    return this.ew_tricks + this.ns_tricks == 13;\n  }\n\n  // Play a card\n  play(player: string, suit: string, rank: number) {\n    if (player != this.player) {\n      throw 'Played out of turn';\n    }\n    var holding = this.cards[player][suit];\n    var idx = holding.indexOf(rank);\n    if (idx == -1) {\n      throw `${player} tried to play ${rank} ${suit} which was not in hand.`;\n    }\n    var legalPlays = this.legalPlays();\n    if (!_.find(legalPlays, {player, suit, rank})) {\n      throw `${suit} ${rank} by ${player} does not follow suit.`;\n    }\n\n    this.cards[player][suit].splice(idx, 1);\n    this.plays.push({player, suit, rank});\n    if (this.plays.length == 4) {\n      this.sweep();\n    } else {\n      this.player = NEXT_PLAYER[player];\n    }\n  }\n\n  // A trick has been completed. Determine the winner and advance the state.\n  sweep() {\n    if (this.plays.length != 4) {\n      throw 'Tried to sweep incomplete trick';\n    }\n    var topSuit = this.plays[0].suit,\n        topRank = this.plays[0].rank,\n        winner = this.plays[0].player;\n    for (var i = 1; i < 4; i++) {\n      var {suit, rank, player} = this.plays[i];\n      if ((suit == topSuit && rank > topRank) ||\n          (suit == this.strain && topSuit != this.strain)) {\n        topSuit = suit;\n        topRank = rank;\n        winner = player;\n      }\n    }\n\n    var trick = {\n      plays: this.plays,\n      leader: this.plays[0].player,\n      winner\n    };\n    this.tricks.push(trick);\n    this.plays = [];\n    this.player = winner;\n    if (winner == 'N' || winner == 'S') {\n      this.ns_tricks++;\n    } else {\n      this.ew_tricks++;\n    }\n    this.lastTrickPBN = this.toPBN();\n  }\n\n  // Returns an array of {player, suit, rank} objects.\n  // TODO: replace this with a call to nextPlays()\n  legalPlays() {\n    var player = this.player;\n    var followSuit = this.plays.length ? this.plays[0].suit : null;\n    if (followSuit && this.cards[player][followSuit].length == 0) {\n      followSuit = null;\n    }\n\n    var cards = this.cardsForPlayer(player);\n    if (followSuit) {\n      cards = cards.filter(({suit}) => suit == followSuit);\n    }\n    return cards.map(({suit, rank}) => ({player, suit, rank}));\n  }\n\n  // Interface to dds.js\n  nextPlays() {\n    return nextPlays(this.lastTrickPBN,\n                     this.strain,\n                     this.plays.map(formatCard));\n  }\n\n  // Returns an array of {suit, rank} objects.\n  cardsForPlayer(player: string) {\n    var cards = this.cards[player];\n    return _.flatten(_.map(cards, (ranks, suit) => ranks.map(rank => ({suit, rank}))));\n  }\n\n  getDeclarer(): string {\n    return NEXT_PLAYER[NEXT_PLAYER[NEXT_PLAYER[this.firstPlayer]]];\n  }\n\n  // Undo the last play\n  undo() {\n    var prevTricks = this.tricks.length,\n        plays = this.plays.length;\n\n    if (plays == 0) {\n      if (prevTricks == 0) {\n        throw 'Cannot undo play when no plays have occurred.';\n      } else {\n        prevTricks -= 1;\n        plays = 3;\n      }\n    } else {\n      plays--;\n    }\n    this.undoToPlay(prevTricks, plays);\n  }\n\n  // Undo to a previous position.\n  // trickNum \\in 0..12\n  // playNum \\in 0..3\n  undoToPlay(trickNum: number, playNum: number) {\n    // gather all the cards that have been played\n    var cards = _.flatten(this.tricks.map(trick => trick.plays));\n    cards = cards.concat(this.plays);\n\n    // restore cards to hands\n    for (var {player, suit, rank} of cards) {\n      this.cards[player][suit].push(rank);\n    }\n    this.sortHands();\n\n    // reset tricks & player\n    this.player = this.firstPlayer;\n    this.tricks = [];\n    this.plays = [];\n    this.ew_tricks = 0;\n    this.ns_tricks = 0;\n    this.lastTrickPBN = this.toPBN();\n\n    // replay until the appropriate point\n    for (var {player, suit, rank} of cards) {\n      if (this.tricks.length == trickNum && this.plays.length == playNum) {\n        break;\n      }\n      this.play(player, suit, rank);\n    }\n  }\n\n  indexForCard(suit: string, rank: string): [numer, number] {\n    for (var i = 0; i < this.tricks.length; i++) {\n      var plays = this.tricks[i].plays;\n      for (var j = 0; j < plays.length; j++) {\n        var card = plays[j];\n        if (card.suit == suit && card.rank == rank) {\n          return [i, j];\n        }\n      }\n    }\n\n    for (var j = 0; j < this.plays.length; j++) {\n      var card = this.plays[j];\n      if (card.suit == suit && card.rank == rank) {\n        return [i, j];\n      }\n    }\n\n    throw `Couldn't find played card ${rank} ${suit}`;\n  }\n\n  undoToCard(suit: string, rank: number) {\n    var [trickNum, playNum] = this.indexForCard(suit, rank);\n    this.undoToPlay(trickNum, playNum);\n  }\n\n  // Sort all holdings from highest to lowest rank\n  sortHands() {\n    for (var player in this.cards) {\n      for (var suit in this.cards[player]) {\n        this.cards[player][suit].sort((a, b) => b - a);\n      }\n    }\n  }\n\n  toPBN() {\n    var player = this.player;\n    var holdings = [];\n    for (var i = 0; i < 4; i++) {\n      var hand = this.cards[player];\n      holdings.push(['S', 'H', 'D', 'C'].map(suit => hand[suit].map(rankToText).join('')).join('.'));\n      player = NEXT_PLAYER[player];\n    }\n    return this.player + ':' + holdings.join(' ');\n  }\n}\n\nfunction textToRank(txt: string): number {\n  if (txt.length != 1) {\n    throw 'Invalid card symbol: ' + txt;\n  }\n  if (txt >= '2' && txt <= '9') return Number(txt);\n  if (txt == 'T') return 10;\n  if (txt == 'J') return 11;\n  if (txt == 'Q') return 12;\n  if (txt == 'K') return 13;\n  if (txt == 'A') return 14;\n  throw 'Invalid card symbol: ' + txt;\n}\n\nfunction rankToText(rank: number): string {\n  if (rank < 10) return String(rank);\n  else if (rank == 10) return 'T';\n  else if (rank == 11) return 'J';\n  else if (rank == 12) return 'Q';\n  else if (rank == 13) return 'K';\n  else if (rank == 14) return 'A';\n  throw 'Invalid card rank: ' + rank;\n}\n\n// Returns a 2-character string like \"QD\" or \"TH\"\nfunction formatCard(card: {suit: string, rank: number}): string {\n  return rankToText(card.rank) + card.suit;\n}\n\nfunction onSameTeam(a: string, b: string): boolean {\n  return a == b || NEXT_PLAYER[NEXT_PLAYER[a]] == b;\n}\n\nvar SUITS = ['S', 'H', 'D', 'C'];\n\nvar NEXT_PLAYER = {\n  'N': 'E',\n  'E': 'S',\n  'S': 'W',\n  'W': 'N'\n};\nvar PLAYER_TO_ARROW = {\n  'N': '⬆',\n  'W': '⬅',\n  'S': '⬇',\n  'E': '➡'\n};\n\n// Given a PBN string, return a player -> string holding mapping, e.g.\n// {N: 'AKQJ.984...', ...}\nfunction parsePBNStrings(pbn: string): {[key: string]: string} {\n  var parts = pbn.split(' ');\n  if (parts.length != 4) {\n    throw 'PBN must have four hands (got ' + parts.length + ')';\n  }\n\n  var m = parts[0].match(/^([NSEW]):/);\n  if (!m) {\n    throw 'PBN must start with either \"N:\", \"S:\", \"E:\" or \"W:\"';\n  }\n  parts[0] = parts[0].slice(2);\n  var player = m[1];\n  var hands = {};\n  parts.forEach((txt, i) => {\n    hands[player] = txt;\n    player = NEXT_PLAYER[player];\n  });\n  return hands;\n}\n\nfunction parsePBN(pbn: string) {\n  var textHands = parsePBNStrings(pbn);\n\n  var deal = {};\n  _.each(textHands, (txt, player) => {\n    deal[player] = {};\n    var suits = txt.split('.');\n    if (suits.length != 4) {\n      throw `${player} must have four suits, got ${suits.length}: ${txt}`;\n    }\n    suits.forEach((holding, idx) => {\n      deal[player][SUITS[idx]] = [].map.call(holding, textToRank);\n    });\n  });\n  return deal;\n}\n\n// Rotate the PBN string so that firstPlayer is first.\nfunction rotatePBN(pbn, firstPlayer) {\n  if (firstPlayer.length != 1 || 'NSEW'.indexOf(firstPlayer) == -1) {\n    throw `Invalid player: ${firstPlayer}`;\n  }\n  var textHands = parsePBNStrings(pbn);\n  var player = firstPlayer;\n  var hands = [];\n  do {\n    hands.push(textHands[player]);\n    player = NEXT_PLAYER[player];\n  } while (player != firstPlayer);\n  return firstPlayer + ':' + hands.join(' ');\n}\n\nvar SUIT_SYMBOLS = {\n  'S': '♠',\n  'H': '♥',\n  'D': '♦',\n  'C': '♣'\n};\n\n\nconst SUIT_RANKS = {'S': 0, 'H': 1, 'D': 2, 'C': 3};\n\n// Comparator for card ranks.\nfunction compareCards(a: {suit: string, rank: number},\n                      b: {suit: string, rank: number}): number {\n  if (a.suit != b.suit) {\n    return SUIT_RANKS[a.suit] - SUIT_RANKS[b.suit];\n  } else {\n    return a.rank - b.rank;\n  }\n}\n\n/**\n * Play out all remaining tricks on a board using min/max.\n * This is done asynchronously. Calls the callback after each play.\n * Returns a Promise which is resolved after the last play is completed.\n */\nfunction autoPlay(b: Board, cb: ()=>void): Promise {\n  return new Promise((resolve, reject) => {\n    let declarer = b.getDeclarer();\n    var iterate = () => {\n      if (b.isCompleted()) {\n        resolve();\n        return;\n      }\n\n      let plays = b.nextPlays().plays.map(x => _.extend({}, x, {rank: textToRank(x.rank)}));\n      plays.sort((a, b) => -compareCards(a, b));\n      plays = _.sortBy(plays, p => -p.score);\n      let p = plays[0];\n      b.play(b.player, p.suit, p.rank);\n      cb();\n      window.requestAnimationFrame(iterate);\n    };\n    window.requestAnimationFrame(iterate);\n  });\n}\n\n/**\n * props:\n *   suit: {'S', 'H', 'D', 'C'}\n *   rank: {'1'..'9', 'T', 'J', 'Q', 'K', 'A'}\n *   making: null | number\n *   facedown: {false, true}\n *   onClick: (suit: string, rank: number) => void\n */\nclass Card extends React.Component {\n  handleClick() {\n    if (this.props.onClick) {\n      this.props.onClick(this.props.suit, this.props.rank);\n    }\n  }\n\n  render() {\n    var suit = this.props.suit;\n    var suitSym = SUIT_SYMBOLS[suit];\n    var rankSym = this.props.rank;\n    if (rankSym == 'T') rankSym = '10';\n    if (rankSym == 11) rankSym = 'J';\n    if (rankSym == 12) rankSym = 'Q';\n    if (rankSym == 13) rankSym = 'K';\n    if (rankSym == 14) rankSym = 'A';\n    var className = 'card' + (this.props.className ? ' ' + this.props.className : '');\n    if (this.props.facedown) {\n      return (\n          <div className={className + ' facedown'}>\n            <span className='rank'>{'\\u00a0'}</span>\n            <span className='suit'>{'\\u00a0'}</span>\n          </div>\n        );\n    } else {\n      return (\n          <div className={className} onClick={this.handleClick.bind(this)}>\n            <span className='rank'>{rankSym}</span>\n            <span className={'suit suit-' + suit}>{suitSym}</span>\n            <span className='making'>{this.props.making}</span>\n          </div>\n      );\n    }\n  }\n}\n\n/**\n * props:\n *   hand: { 'S': [4, 9, 13], ... }\n *   enable: 'all' | 'S' | 'H' | 'C' | 'D' | 'none'\n *   oneRow: boolean\n *   making: [{rank, suit, score}]\n *   onClick: (suit: string, rank: number) => void\n */\nclass Hand extends React.Component {\n  handleClick(suit: string, rank: number) {\n    var enable = this.props.enable || 'all';\n    if (this.props.onClick && (enable == 'all' || enable == suit)) {\n      this.props.onClick(suit, rank);\n    }\n  }\n\n  render() {\n    var click = this.handleClick.bind(this);\n    var making = _.mapObject(_.groupBy(this.props.making, 'suit'),\n                             vs => _.object(vs.map(({rank, score}) => [rank, score])));\n    var cards = {};\n    for (var suit in this.props.hand) {\n      var holding = this.props.hand[suit];\n      var mkSuit = making[suit] || {};\n      cards[suit] = holding.map(rank => <Card key={rank}\n                                              suit={suit}\n                                              rank={rank}\n                                              making={mkSuit[rank]}\n                                              onClick={click} />);\n    }\n    var sep = this.props.oneRow ? ' ' : <br/>;\n    var enable = this.props.enable || 'all';\n    var d = enable == 'all' ? true : false;\n    var enabled = {'S': d, 'H': d, 'C': d, 'D': d};\n    if (enable in enabled) {\n      enabled[enable] = true;\n    }\n    var suitClass = {};\n    for (var k in enabled) {\n      suitClass[k] = 'suit ' + (enabled[k] ? 'enable' : 'disabled');\n    }\n    return (\n      <div className=\"hand\">\n        <div className={suitClass['S']}>{cards['S']}</div>\n        {sep}\n        <div className={suitClass['H']}>{cards['H']}</div>\n        {sep}\n        <div className={suitClass['C']}>{cards['C']}</div>\n        {sep}\n        <div className={suitClass['D']}>{cards['D']}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * props:\n *   plays: [{suit: 'S', rank: 14}, ...]\n *   lead: 'W' | ...\n *   winner: null | 'W' | ...\n *   showArrow: true | false\n *   isPositiveTrick: true | false | undefined\n *   onClick: (suit: string, rank: number) => void\n */\nclass Trick extends React.Component {\n  handleClick(player, suit: string, rank: number) {\n    if (this.props.onClick) {\n      this.props.onClick(player, suit, rank);\n    }\n  }\n  \n  render() {\n    // Matches size of a card\n    var spacer = <div style={{width: '22px', height: '38px'}}></div>;\n    var playerToCard = {N: spacer, S: spacer, E: spacer, W: spacer};\n    var player = this.props.leader;\n    var makeClick = player => this.handleClick.bind(this, player);\n    for (var card of this.props.plays) {\n      var className = player == this.props.leader ? 'lead' : null;\n      playerToCard[player] = <Card rank={card.rank}\n                                   suit={card.suit}\n                                   className={className}\n                                   onClick={makeClick(player)} />;\n      player = NEXT_PLAYER[player];\n    }\n    var arrow = this.props.showArrow ? PLAYER_TO_ARROW[player] : ' ';\n    var isPositiveTrick = this.props.isPositiveTrick,\n        backgroundClass = isPositiveTrick === true ? 'positive' : isPositiveTrick === false ? 'negative' : '';\n\n    return (\n      <table className={'trick ' + backgroundClass}>\n        <tbody>\n          <tr>\n            <td colSpan={3} className=\"north-trick\">\n              {playerToCard['N']}\n            </td>\n          </tr>\n          <tr>\n            <td className=\"west-trick\">\n              {playerToCard['W']}\n            </td>\n            <td>{arrow}</td>\n            <td className=\"east-trick\">\n              {playerToCard['E']}\n            </td>\n          </tr>\n          <tr>\n            <td colSpan={3} className=\"south-trick\">\n              {playerToCard['S']}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n/**\n * props:\n *   deal: (parsed PBN)\n *   plays: [{suit: 'S', rank: 14}, ...]\n *   leader: 'W'\n *   legalSuit: 'all' | 'S' | 'H' | 'C' | 'D'\n *   making: {player: [{rank, suit, score}]}\n *   onClick: (player: string, suit: string, rank: number) => void\n *   onUndo: (player: string, suit: string, rank: number) => void\n *\n * TODO: kill legalSuit and use only `making`\n */\nclass Deal extends React.Component {\n  handleClick(player: string, suit: string, rank: number) {\n    if (this.props.onClick) {\n      this.props.onClick(player, suit, rank);\n    }\n  }\n\n  handleUndo(player: string, suit: string, rank: number) {\n    if (this.props.onUndo) {\n      this.props.onUndo(player, suit, rank);\n    }\n  }\n\n  getEnables() {\n    var enables = {'N': 'none', 'E': 'none', 'S': 'none', 'W': 'none'};\n    var player = this.props.leader;\n    for (var i = 0; i < this.props.plays.length; i++) {\n      player = NEXT_PLAYER[player];\n    }\n    enables[player] = this.props.legalSuit;\n    return enables;\n  }\n\n  render() {\n    var d = this.props.deal;\n    var makeClick = player => this.handleClick.bind(this, player);\n    var enables = this.getEnables();\n    var making = this.props.making;\n    return (\n      <table className=\"deal\">\n        <tbody>\n          <tr>\n            <td colSpan={3} className=\"north\" style={{'textAlign': 'center'}}>\n              <Hand oneRow={true} hand={d.N} enable={enables.N} making={making.N} onClick={makeClick('N')} />\n              <div className=\"player-label\">\n                North\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td className=\"west\">\n              <div>\n                <Hand hand={d.W} enable={enables.W} making={making.W} onClick={makeClick('W')} />\n              </div>\n              <div className=\"player-label\">\n              W<br/>\n              e<br/>\n              s<br/>\n              t\n              </div>\n            </td>\n            <td className=\"plays\">\n              <Trick showArrow={true} plays={this.props.plays} leader={this.props.leader} onClick={this.handleUndo.bind(this)} />\n            </td>\n            <td className=\"east\">\n              <div className=\"player-label\">\n              E<br/>\n              a<br/>\n              s<br/>\n              t\n              </div>\n              <div>\n                <Hand hand={d.E} enable={enables.E} making={making.E} onClick={makeClick('E')} />\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan={3} className=\"south\" style={{'textAlign': 'center'}}>\n              <div className=\"player-label\">\n                South\n              </div>\n              <Hand oneRow={true} hand={d.S} enable={enables.S} making={making.S} onClick={makeClick('S')} />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n/**\n * props:\n *   matrix: Output of calcDDTable()\n *   strain: currently selected strain\n *   declarer: currently selected declarer\n *   onClick: (strain: string, declarer: string) => void\n */\nclass DDMatrix extends React.Component {\n  handleClick(strain: string, player: string) {\n    if (this.props.onClick) {\n      this.props.onClick(strain, player);\n    }\n  }\n\n  render() {\n    var m = this.props.matrix;\n    var ud = num => (num >= 7 ? 'up' : 'down');\n    var makeCell = (strain, player) => {\n      var tricks = m[strain][player];\n      var selected = strain == this.props.strain && player == this.props.declarer;\n      var className = [ud(tricks)].concat(selected ? ['selected'] : []).join(' ');\n      var clickFn = this.handleClick.bind(this, strain, player);\n      return (\n        <td key={strain+player} className={className} onClick={clickFn}>\n          {tricks}\n        </td>\n      );\n    };\n\n    var rows = ['N', 'S', 'E', 'W'].map(player => (\n          <tr key={player}>\n            <td>{player}</td>\n            {makeCell('N', player)}\n            {makeCell('S', player)}\n            {makeCell('H', player)}\n            {makeCell('D', player)}\n            {makeCell('C', player)}\n          </tr>));\n\n    return (\n      <table className=\"dd-matrix\">\n        <tbody>\n          <tr>\n            <th>{' '}</th>\n            <th className=\"suit suit-N\">NT</th>\n            <th className=\"suit suit-S\">♠</th>\n            <th className=\"suit suit-H\">♥</th>\n            <th className=\"suit suit-D\">♦</th>\n            <th className=\"suit suit-C\">♣</th>\n          </tr>\n          {rows}\n        </tbody>\n      </table>\n    );\n  }\n}\n\n/**\n * props:\n * - board\n * - onChange\n */\nclass Explorer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleClick(player: string, suit: string, rank: number) {\n    var board = this.props.board;\n    board.play(player, suit, rank);\n    this.forceUpdate();\n    if (this.props.onChange) this.props.onChange();\n  }\n\n  handleUndo(player: string, suit: string, rank: number) {\n    this.props.board.undoToCard(suit, rank);\n    this.forceUpdate();\n    if (this.props.onChange) this.props.onChange();\n  }\n\n  // Returns a {player -> [{suit, rank, score}, ...]} object.\n  // score is tricks available to the declarer after each play.\n  getMaking(board: Board) {\n    var data = board.nextPlays();\n    var player = data.player;\n    var makingPlays = _.flatten((data.plays || []).map(({suit, rank, score, equals}) => {\n      return [{suit, rank, score}].concat(equals.map(rank => ({suit, rank, score})));\n    })).map(({suit, rank, score}) => ({suit, rank: textToRank(rank), score}));\n    makingPlays.forEach(play => {\n      if (onSameTeam(player, board.getDeclarer())) {\n        play.score += (player == 'E' || player == 'W') ? board.ew_tricks : board.ns_tricks;\n      } else {\n        play.score += (player == 'E' || player == 'W') ? board.ew_tricks : board.ns_tricks;\n        play.score = 13 - play.score;\n      }\n    });\n\n    return {\n      [player]: makingPlays\n    };\n  }\n\n  render() {\n    var board = this.props.board;\n    var handleUndo = this.handleUndo.bind(this);\n    var prevTricks = board.tricks.map(\n        (trick, i) => <Trick key={i}\n                             plays={trick.plays}\n                             leader={trick.leader}\n                             winner={trick.winner}\n                             isPositiveTrick={onSameTeam(trick.winner, board.getDeclarer())}\n                             onClick={handleUndo} />);\n    var legalPlays = board.legalPlays();\n    var legalSuits = _.uniq(_.pluck(legalPlays, 'suit'));\n    var legalSuit = legalSuits.length == 1 ? legalSuits[0] : 'all';\n\n    var making = this.getMaking(board);\n    var deal = board.isCompleted() ? null : \n        <Deal deal={board.cards}\n              plays={board.plays}\n              leader={board.leader()}\n              legalSuit={legalSuit}\n              making={making}\n              onClick={this.handleClick.bind(this)}\n              onUndo={handleUndo} />;\n\n    return (\n      <div>\n        {deal}\n        <div className=\"score\">\n          <p>{board.ns_tricks} North-South</p>\n          <p>{board.ew_tricks} East-West</p>\n        </div>\n        <div className=\"previous-tricks\">\n          {prevTricks}\n        </div>\n      </div>\n    );\n  }\n}\n\n// Given a file object from a FileList, return a Promise for an\n// HTMLImageElement.\nfunction loadUploadedImage(file) {\n  return new Promise(function(resolve, reject) {\n    var reader = new FileReader();\n    reader.onloadend = function () {\n      var image = new Image();\n      image.onload = function () {\n        var width = image.width,\n            height = image.height;\n        console.log('Image dimensions: ', width, 'x', height);\n        resolve(image);\n      };\n\n      image.onerror = function () {\n        console.error('There was an error processing your file!');\n        reject('There was an error processing your file!');\n      };\n      \n      image.src = reader.result;\n    };\n    reader.onerror = function () {\n      console.error('There was an error reading the file!');\n      reject('There was an error reading the file!');\n    };\n\n    reader.readAsDataURL(file);\n  });\n}\n\n/**\n * props:\n *   initialPBN\n *   initialDeclarer\n *   initialStrain\n *   initialPlays\n */\nclass Root extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pbn: props.initialPBN,\n      strain: props.initialStrain,\n      declarer: props.initialDeclarer\n    };\n    this.board = this.makeBoard(this.state);\n    for (let play of props.initialPlays) {\n      this.board.play(this.board.player, play.suit, play.rank);\n    }\n  }\n\n  // Update in response to form changes.\n  handleFormSubmit(e: SyntheticEvent) {\n    e.preventDefault();\n    this.setState({\n      pbn: this.refs.pbn.value\n    });\n  }\n\n  handleUpload(e: SyntheticEvent) {\n    var file = e.target.files[0];\n    Promise.all([\n      ibb.loadReferenceData('ibb/ns-black.png', 'ibb/ns-red.png'),\n      loadUploadedImage(file)])\n    .then(([ref, img]) => {\n      var hand = ibb.recognizeHand(img, ref);\n      if (hand.errors.length) {\n        console.warn('Unable to recognize iBridgeBaron hand', hand.errors);\n        return;\n      }\n\n      this.setState({pbn: hand.pbn});\n    }).catch(error => {\n      alert(error);\n    });\n  }\n\n  handleDDClick(strain: string, declarer: string) {\n    this.setState({ strain, declarer });\n  }\n\n  makeBoard(state) {\n    var pbn = rotatePBN(state.pbn, NEXT_PLAYER[state.declarer]);\n    return new Board(pbn, state.strain);\n  }\n\n  componentDidMount() {\n    this.updateUI();\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (!_.isEqual(this.state, nextState)) {\n      this.board = this.makeBoard(nextState);\n    }\n  }\n\n  componentDidUpdate() {\n    this.updateUI();\n  }\n\n  updateUI() {\n    this.refs.pbn.value = this.state.pbn;\n    this.setURL();\n  }\n\n  setURL() {\n    let board = this.board;\n    let plays = _.flatten(board.tricks.map(t => t.plays).concat(board.plays));\n    let params = {\n      strain: this.state.strain,\n      declarer: this.state.declarer,\n      plays: plays.map(({suit,rank}) => rankToText(rank) + suit).join(','),\n      deal: this.state.pbn\n    };\n    let queryString = _.map(params, (v, k) => k + '=' + v).join('&');\n    history.replaceState({}, '', '?' + queryString.replace(/ /g, '+'));\n  }\n\n  boardDidUpdate() {\n    this.setURL();\n  }\n\n  autoPlay() {\n    autoPlay(this.board, () => {\n      this.forceUpdate();\n    }).then(() => {\n    });\n  }\n\n  render() {\n    var handleFormSubmit = this.handleFormSubmit.bind(this),\n        handleUpload = this.handleUpload.bind(this);\n    return (\n      <div>\n        <form onSubmit={handleFormSubmit}>\n          PBN: <input type=\"text\" size=\"70\" ref=\"pbn\" />\n        </form>\n        <form onChange={handleUpload}>\n          iBridgeBaron: <input ref=\"ibb\" type=\"file\" accept=\"image/*\" />\n        </form>\n        <button onClick={this.autoPlay.bind(this)}>Autoplay</button>\n        <DDMatrix matrix={calcDDTable(this.state.pbn)}\n                  declarer={this.state.declarer} \n                  strain={this.state.strain}\n                  onClick={this.handleDDClick.bind(this)} />\n        <Explorer board={this.board}\n                  onChange={this.boardDidUpdate.bind(this)} />\n      </div>\n    );\n  }\n}\n\n// Via http://stackoverflow.com/a/2880929/388951\nfunction parseQueryString() {\n  var match,\n      pl     = /\\+/g,  // Regex for replacing addition symbol with a space\n      search = /([^&=]+)=?([^&]*)/g,\n      decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); },\n      query  = window.location.search.substring(1);\n\n  var urlParams = {};\n  while (match = search.exec(query)) {\n   urlParams[decode(match[1])] = decode(match[2]);\n  }\n  return urlParams;\n}\n\nfunction parsePlays(playsStr: string) {\n  if (!playsStr) return [];\n  return playsStr.split(',')\n                 .map(play => ({\n                   rank: textToRank(play[0]),\n                   suit: play[1]\n                 }));\n}\n\nwindow.parsePBN = parsePBN;\nwindow.rotatePBN = rotatePBN;\nwindow.Board = Board;\nwindow.Root = Root;\n\nvar root = document.getElementById('root');\nif (root) {\n  var params = parseQueryString();\n  var pbn = params.deal ? params.deal.replace(/\\+/g, ' ') : 'N:T843.K4.KT853.73 J97.J763.642.KJ5 Q52.Q982.QJ.9862 AK6.AT5.A97.AQT4';\n  var strain = params.strain || 'N';\n  var declarer = params.declarer || 'W';\n  var plays = parsePlays(params.plays) || [];\n\n  ReactDOM.render(\n    <Root initialPBN={pbn}\n          initialStrain={strain}\n          initialDeclarer={declarer}\n          initialPlays={plays} />,\n    root\n  );\n}\n","/**\n * Load the image at `path` (relative to the current page).\n * This returns a Promise for an HTMLImageElement.\n */\nfunction loadImage(path) {\n  return new Promise((resolve, reject) => {\n    var img = document.createElement('img');\n    img.onload = function () {\n        var c = document.createElement('canvas');\n        c.width = img.width;\n        c.height = img.height;\n        c.getContext(\"2d\").drawImage(img, 0, 0);\n        resolve(c);\n    };\n    img.src = path;\n  });\n};\n\n/**\n * Takes a canvas and a key -> [x1, y1, x2, y2] mapping.\n * Returns a key -> canvas mapping with the sliced images.\n * Slices are inclusive on both ends, e.g. x1=1 x2=2 will produce a 2px wide\n *   slice.\n */\nfunction sliceImage(canvas, boxes) {\n  return _.mapObject(boxes, (box, key) => {\n    var [x1, y1, x2, y2] = box;\n    var sliceCanvas = document.createElement('canvas');\n    sliceCanvas.width = x2 - x1 + 1;\n    sliceCanvas.height = y2 - y1 + 1;\n    var ctx = sliceCanvas.getContext('2d');\n    ctx.drawImage(canvas,\n                  x1, y1, x2 - x1 + 1, y2 - y1 + 1,\n                  0, 0, x2 - x1 + 1, y2 - y1 + 1);\n    return sliceCanvas;\n  });\n};\n\n/**\n * takes a canvas and returns a 1d array of whether pixels are foreground.\n * \"foreground\" is very specific to iBridgeBaron screenshots.\n */\nfunction binarize(canvas) {\n  var out = Array(canvas.width * canvas.height);\n  var w = canvas.width,\n      h = canvas.height,\n      d = canvas.getContext('2d').getImageData(0, 0, w, h).data;\n\n  for (var i = 0, n = 0; i < d.length; i+=4, n++) {\n    var r = d[i + 0],\n        g = d[i + 1],\n        b = d[i + 2];\n\n    // 0,0,0 = black\n    // 232,236,196 = background\n    // 229,0,28 = red\n    var blackErr = (r + g + b) / 3,\n        redErr = (Math.abs(r - 229) + g + Math.abs(b - 28)) / 3;\n\n    // 231, 87, 84 = red  2 + 87 + 56  => 145/3 ~= 48\n    // 229, 15, 34 = red  0 + 15 + 6  => 21/3 = 7\n    // 236, 220, 187 = bad  7 + 220 + 159\n\n    // 26, 26, 23 = black\n    // 13, 13, 11 = black\n\n    // 136, 134, 113 = bad\n\n    out[n] = (blackErr < 30 || redErr < 50) ? 1 : 0;\n  }\n\n  // clear out a 4x4 area around each corner. If there's anything there, it's\n  // likely to be an artifact.\n  var zero = (x, y) => { out[w * y + x] = 0; };\n  for (var x = 0; x < 4; x++) {\n    for (var y = 0; y < 4; y++) {\n      zero(x, y);\n      zero(w - 1 - x, y);\n      zero(x, h - 1 - y);\n      zero(w - 1 - x, h - 1 - y);\n    }\n  }\n\n  return out;\n}\n\n/**\n * Returns a new binary array which is 1 where a and b differ.\n */\nfunction binaryDiff(a, b) {\n  if (a.length != b.length) {\n    throw `Length mismatch: ${a.length} != ${b.length}`;\n  }\n\n  var d = Array(a.length);\n  for (var i = 0; i < a.length; i++) {\n    d[i] = a[i] != b[i] ? 1 : 0;\n  }\n  return d;\n}\n\n/**\n * Given a binary array (e.g. output of binarize()), return a B&W canvas.\n */\nfunction binaryToCanvas(pixels, width) {\n  if (!(width > 0)) {\n    throw `Invalid width: ${width}`;\n  }\n  if (pixels.length % width != 0) {\n    throw `Invalid width: ${width} does not divide ${pixels.length}`;\n  }\n  var canvas = document.createElement('canvas');\n  var height = pixels.length / width;\n  canvas.width = width;\n  canvas.height = height;\n  var ctx = canvas.getContext('2d');\n  var imageData = ctx.createImageData(width, height);\n  var d = imageData.data;\n  for (var i = 0, n = 0; i < pixels.length; i++, n += 4) {\n    var v = pixels[i] ? 0 : 255;\n    d[n] = d[n + 1] = d[n + 2] = v;\n    d[n + 3] = 255;\n  }\n  ctx.putImageData(imageData, 0, 0);\n  return canvas;\n}\n\n/**\n * Shift a binary array representing an image by (dx, dy).\n * Returns a new array, leaving the original untouched.\n */\nfunction binaryShift(pixels, width, dx, dy) {\n  if (!(width > 0)) {\n    throw `Invalid width: ${width}`;\n  }\n  if (pixels.length % width != 0) {\n    throw `Invalid width: ${width} does not divide ${pixels.length}`;\n  }\n  var height = pixels.length / width;\n  var out = Array(pixels.length);\n  for (var i = 0; i < out.length; i++) out[i] = 0;\n\n  for (var y = 0; y < height; y++) {\n    var ny = y + dy;\n    if (ny < 0 || ny >= height) continue;\n    for (var x = 0; x < width; x++) {\n      var nx = x + dx;\n      if (nx < 0 || nx >= width) continue;\n      out[ny * width + nx] = pixels[y * width + x];\n    }\n  }\n  return out;\n}\n\n/**\n * Calculates the RMSE between two arrays.\n */\nfunction rmse(arr1, arr2) {\n  if (arr1.length != arr2.length) {\n    throw `Size mismatch ${arr1.length} != ${arr2.length}`;\n  }\n\n  var mse = 0,\n      n = arr1.length;\n  for (var i = 0; i < n; i++) {\n    var v = arr1[i] - arr2[i];\n    mse += v * v;\n  }\n  mse /= n;\n  return Math.sqrt(mse);\n};\n\n\n/**\n * Find the best matches according to RMSE\n *\n * targets = Array<{\n *   pixels: number[],\n *   shifts?: Array<number[]>\n *   width: number,\n *   ...\n * }>\n *\n * If `shifts` is present, only the lowest RMSE shift is considered.\n */\nfunction bestMatches(pixels, targets) {\n  let scores = targets.map(target => {\n    var score = target.shifts ?\n        _.min(target.shifts.map(shift => rmse(pixels, shift))) :\n        rmse(pixels, target.pixels);\n    return _.extend({}, target, {rmse: score});\n  });\n  return _.sortBy(scores, 'rmse');\n}\n\n/**\n * Returns the margin by which scores[0].rmse is the best, excluding others for\n * which scores[*].property is identical to scores[0].property.\n */\nfunction marginBy(scores, property) {\n  let best = scores[0].rmse,\n      secondBest = _.find(scores, s => s[property] != scores[0][property]).rmse;\n  return (secondBest - best) / best;\n}\n\n\n// Convert a numeric rank to a single character PBN rank (e.g. 10 --> 'T').\nfunction rankToPBN(rank) {\n  if (rank >= 2 && rank < 10) return '' + rank;\n  else if (rank == 10) return 'T';\n  else if (rank == 11) return 'J';\n  else if (rank == 12) return 'Q';\n  else if (rank == 13) return 'K';\n  else if (rank == 14) return 'A';\n  throw `Invalid rank: ${rank}`;\n}\n\n// value order for the suits\nconst SUIT_ORDER = {'S': 0, 'H': 1, 'D': 2, 'C': 3};\n\n// Performs sanity checks on the matches structure in recognizeHand.\n// - are all the cards accounted for?\n// - are the hands correctly ordered?\n// Returns a list of errors (or the empty list if it checks out).\nfunction sanityCheckMatches(matches): string[] {\n  var errors = [];\n  // Are all the cards matched exactly once?\n  let cardCounts = {};  // e.g. AS\n  for (let suit in SUIT_ORDER) {\n    for (let rank of _.range(2, 15)) {\n      cardCounts[rankToPBN(rank) + suit] = [];\n    }\n  }\n  for (let playerPos in matches) {\n    let player = playerPos[0],\n        pos = Number(playerPos.slice(1)),\n        match = matches[playerPos],\n        suit = match.suit,\n        rank = match.rank;\n    cardCounts[rankToPBN(rank) + suit].push(playerPos);\n  }\n\n  for (let card in cardCounts) {\n    let count = cardCounts[card].length;\n    if (count == 0) {\n      errors.push(`Missing ${card}`);\n    } else if (count > 1) {\n      var holders = cardCounts[card].join(', ');\n      errors.push(`Multiple matches of ${card} (${holders})`);\n    }\n  }\n\n  // Is everyone's hand in order?\n  // There is no firm ordering of the suits. If a trump suit is set, then the\n  // hands are re-ordered to put it first.\n  for (let player of ['N', 'E', 'S', 'W']) {\n    for (let pos of _.range(1, 13)) {\n      let a = matches[player + (pos - 1)],\n          b = matches[player + pos];\n      if (a.suit == b.suit && a.rank < b.rank) {\n        var aTxt = rankToPBN(a.rank) + a.suit,\n            bTxt = rankToPBN(b.rank) + b.suit;\n        errors.push(`${player} is out of order: ${aTxt} < ${bTxt}`);\n      }\n    }\n  }\n  return errors;\n}\n\n// Convert the matches structure (in recognizeHand) to PBN. North is always first.\nfunction matchesToPBN(matches) {\n  var holdings = [];\n  for (let player of ['N', 'E', 'S', 'W']) {\n    var bySuit = _.chain(_.range(0, 13))\n                  .map(pos => matches[player + pos])\n                  .groupBy('suit')\n                  .mapObject(cards => cards.map(\n                        card => rankToPBN(card.rank)).join(''))\n                  .value();\n                  // looks like {S:'KQT9', H:'9876', ...}\n\n    // We need the empty strings to correctly handle void suits.\n    bySuit = _.chain(_.extend({S: '', H: '', D: '', C: ''}, bySuit))\n                  .pairs()\n                  .sortBy(([suit]) => SUIT_ORDER[suit])\n                  .map(([suit, text]) => text)\n                  .join('.')\n                  .value();\n    holdings.push(bySuit);\n  }\n  return 'N:' + holdings.join(' ');\n}\n\n// Boxes to split apart the rank and suit.\n// Recognition works much better when these are done independently.\nvar slices = {\n  'NS': {'rank': [0, 0, 51, 59], 'suit': [0, 60, 51, 120]},\n  'EW': {'rank': [0, 0, 41, 50], 'suit': [42, 0, 73, 50]}\n};\n\nvar cachedReference = {};\n\n/**\n * Load reference data. Returns a promise for the reference.\n */\nfunction loadReferenceData(nsBlackPath, nsRedPath) {\n  var cacheKey = nsBlackPath + ' ' + nsRedPath;\n  if (cacheKey in cachedReference) {\n    return Promise.resolve(cachedReference[cacheKey]);\n  }\n\n  return Promise.all([\n    loadImage(nsBlackPath),\n    loadImage(nsRedPath)\n  ]).then(([blackImage, redImage]) => {\n    // NS have all the red cards in one image, all the black in the other.\n    var nsBlackSuits = {N: 'S', E: 'D', S: 'C', W: 'H'};\n    var nsRedSuits =   {N: 'H', E: 'C', S: 'D', W: 'S'};\n\n    // This is the reference structure which is returned. It contains examples\n    // of what each suit and rank look like in both N/S and E/W positions.\n    var ref = {\n      'NS': {ranks: [], suits: []},\n      'EW': {ranks: [], suits: []}\n    };\n\n    // Add a single card from one of the reference images to the `ref` object.\n    var recordCard = function(card, position, isNorthBlack) {\n      var player = position[0];\n      var isNS = (player == 'S' || player == 'N'),\n          side = isNS ? 'NS' : 'EW';\n      var posNum = Number(position.slice(1));\n      var rank = 14 - posNum;\n      var cardSlices = sliceImage(card, slices[side]),\n          rankSlice = cardSlices.rank,\n          suitSlice = cardSlices.suit;\n      var suitPixels = binarize(suitSlice),\n          rankPixels = binarize(rankSlice);\n\n      // Only the rank images are shifted. There are enough copies of the suit\n      // images that this isn't needed for them. The N/S images are shifted\n      // left/right while E/W images are shifted up/down.\n      var dx = isNS ? 1 : 0,\n          dy = isNS ? 0 : 1;\n      var shifts = [\n        binaryShift(rankPixels, rankSlice.width, -dx, -dy),\n        rankPixels,\n        binaryShift(rankPixels, rankSlice.width, +dy, +dy)\n      ];\n      var suit = isNorthBlack ? nsBlackSuits[player] : nsRedSuits[player];\n      var rankEl = {pixels: rankPixels, shifts, rank, width: rankSlice.width, height: rankSlice.height};\n      var suitEl = {suit, pixels: suitPixels, width: suitSlice.width, height: suitSlice.height};\n\n      ref[side].ranks.push(rankEl);\n      ref[side].suits.push(suitEl);\n    };\n\n    var cardsBlackNorth = sliceImage(blackImage, ibbBoxes6);\n    var cardsRedNorth = sliceImage(redImage, ibbBoxes6);\n    _.each(cardsBlackNorth, (card, position) => {\n      recordCard(card, position, true);\n    });\n    _.each(cardsRedNorth, (card, position) => {\n      recordCard(card, position, false);\n    });\n\n    cachedReference[cacheKey] = ref;\n    return ref;\n  });\n}\n\n/**\n * Given a screenshot of an iBridgeBaron hand, attempt to recognize the cards.\n *\n * Returns:\n * {\n *   pbn: string,\n *   margin: number,\n *   errors: string[],\n *   matches: Object[]\n * }\n *\n * Higher margins indicate greater confidence. If errors is non-empty, then the\n * board does not represent a complete hand.\n */\nfunction recognizeHand(handImage, ref) {\n  var w = handImage.width,\n      h = handImage.height;\n  if (w != 750 || h != 1334) {\n    throw `Invalid screenshot: expected 750x1334, got ${w}x${h}`;\n  }\n  console.time('recognizeHand');\n  var cards = sliceImage(handImage, ibbBoxes6);\n\n  var matches = {};\n  for (var pos in cards) {\n    var player = pos[0];\n    var isNS = (player == 'S' || player == 'N');\n    var cardSlices = sliceImage(cards[pos], slices[isNS ? 'NS' : 'EW']),\n        rankSlice = cardSlices.rank,\n        suitSlice = cardSlices.suit;\n    var suitPixels = binarize(suitSlice),\n        rankPixels = binarize(rankSlice);\n    var refs = isNS ? ref.NS : ref.EW;\n\n    var suitMatches = bestMatches(suitPixels, refs.suits);\n    var rankMatches = bestMatches(rankPixels, refs.ranks);\n\n    matches[pos] = {\n      suit: suitMatches[0].suit,\n      suitStats: {\n        rmse: suitMatches[0].rmse,\n        margin: marginBy(suitMatches, 'suit')\n      },\n      rank: rankMatches[0].rank,\n      rankStats: {\n        rmse: rankMatches[0].rmse,\n        margin: marginBy(rankMatches, 'rank')\n      }\n    };\n  }\n\n  var margin = _.min(_.map(matches,\n        m => Math.min(m.suitStats.margin / m.suitStats.rmse,\n                      m.rankStats.margin / m.rankStats.rmse)));\n\n  console.timeEnd('recognizeHand');\n  return {\n    pbn: matchesToPBN(matches),\n    margin,\n    errors: sanityCheckMatches(matches),\n    matches\n  };\n}\n\n// Export these functions globally for now.\n_.extend(window, { ibb: {\n  loadImage,\n  sliceImage,\n  rmse,\n  binarize,\n  binaryToCanvas,\n  binaryDiff,\n  binaryShift,\n  matchesToPBN,\n  sanityCheckMatches,\n  bestMatches,\n  marginBy,\n  loadReferenceData,\n  recognizeHand\n}});\n"]}